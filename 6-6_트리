트리는 연결리스트를 기반으로 한 새로운 데이터 구조이다.
가족트리처럼 2차원적으로 구성한 것이다.
시작 되는 노드를 '루트'라고 하고 루트 노드는 다음 층의 노드들을 가리키고 '자식 노드'라고 부른다.

이 트리는 일정한 규칙을 가지고 있다.
하나의 노드는 두개의 자식 노드를 가진다.
또 왼쪽 자식 노드는 자신의 값보다 작고, 오른쪽 자식 노드는 자신의 값보다 크다.
이것은 재귀함수에 적합하다.
이것은 재귀적 정의이다.


2개의 포인터를 가지도록 새로운 구조체를 만든다.
두개의 포인터를 가진 node를 만들고 
하나는 left 다른 하나는 right이라고 부르면 된다.

이것은 정확하게 이진 탐색 트리라고 부른다. (binary search tree)
트리의 노드들이 모두 최대 두개의 자식 노드가 있고 그래서 이진법의 이진을 따라서 
최대 2라는 것을 표현한다. 그렇기 때문에 '이진'이고,
순서를 맞추기 위해 신경을 썼다는 의미에서 '탐색' 트리이다.

이 트리의 장점은
이진 탐색을 다시 할 수 있다는 것이다.
포인터를 이용해서 연결 리스트처럼 역동성도 가진다.

 이진탐색트리의 탐색 속도는 O(log n)이 된다.
 추가할 때는 
 그냥 0을 넣고 8을 넣고 할 수는 없고 균형을 맞추기 위해서 어떤 값을 넣으면 요소들을 움직이게 만드는 알고리즘을 사용한다.
 이렇게 해도 실행시간은 O(log n)이다.
 
 이진 탐색이 가능한 배열과 같은 실행시간을 가진다.
 
 단점은 공간을 더 많이 사용한다는 것이다.
