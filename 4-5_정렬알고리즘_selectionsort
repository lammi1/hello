이번에는 또 다른 정렬 알고리즘이다.
selection sort라는 선택 정렬이라는 방법인데
이거는 배열에 있는 수들을 모두 확인하고 가장 작은 수를 i번째 자리와 swap하는 것이다.
의사코드로 표현해본다면

for i from 0 to n-1
  Find smallest item between i'th number and last item
  Swap smallest item with i'th item
  
이제 우리가 궁금한 것은 이 방법이 버블 정렬보다 더 효과적인 가이다. 
이것을 확인하는 방법은 Big-O와 Omega 표기법으로 확인 할 수 있다.
O(n^2)이 된다. 왜냐하면
첫번째 가장 작은 숫자를 찾으려면 모든 숫자를 봐야 하기 때문에 n번의 과정이 필요하다.
그 다음에는 (n-1)번
그 다음에는 (n-2)번
이렇게 해서 마지막 1번이 남을 때 까지 반복하는 과정이다.
이때 이걸 수학공식으로 간단히 나타내면
n * (n-1) / 2 가 된다.
그러면 n^2/2 -n/2가 되겠지만 우리에게 중요한 것은 n^2이니까 결과적으로 O(n^2)이 되는 것이다.

그러면 Omega 표기법에는 얼마만큼의 소요시간이 걸리는지 확인을 해보면
차례대로 이미 정렬되어 있는 배열을 selection sort를 하면 어떻게 되냐면
결과적으로 계속 확인해야 한다.
컴퓨터는 처음 본 숫자가 그 배열에서 가장 작은 수 인지 모르기 때문에 결국에는 하나하나씩 확인해야 하는 코드를 반복할 것이다.
그러므로 Omega(n^2)이 된다.


( 선택 정렬

보통 배열이 정렬되어 있으면 정렬되지 않은 배열보다 더 쉽게 탐색할 수 있습니다.

정렬을 위한 알고리즘 중 선택정렬을 배열 안의 자료 중 가장 작은 수(혹은 가장 큰 수)를 찾아 첫 번째 위치(혹은 가장 마지막 위치)의 수와 교환해주는 방식의 정렬입니다.

선택 정렬은 교환 횟수를 최소화하는 반면 각 자료를 비교하는 횟수는 증가합니다.

여기서도 두 번의 루프를 돌아야 합니다.

바깥 루프에서는 숫자들을 처음부터 순서대로 방문하고, 안쪽 루프에서는 가장 작은 값을 찾아야 합니다.

따라서 소요 시간의 상한은 O(n^2)이 됩니다. 하한도 마찬가지로 Ω(n^2) 입니다. 버블 정렬과 동일합니다. )

